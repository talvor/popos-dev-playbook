version: '3.2'

services:
  app:
    image: "traefik:2.10.3"
    command:
      # Tell Traefik to discover containers using the Docker API
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-public
      # Tell Traefik to discover routes using File
      - --providers.file.directory=/etc/traefik/providers
      # Enable the Trafik dashboard
      - --api
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=talvor@me.com
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json
      # Setup entrypoint for port 80
      - --entrypoints.web.address=:80
      # Setup entrypoint for port 443
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=talvor.io
      - --entrypoints.websecure.http.tls.domains[0].sans=*.talvor.io
      # Setup entrypoint for SSH
      - --entrypoints.ssh-gitlab.address=:4022
      # Setup logging
      - --log.level=DEBUG
      - --accesslog=true
    environment:
      - CLOUDFLARE_EMAIL=talvor@me.com
      - CLOUDFLARE_DNS_API_TOKEN=${CF_API_KEY}
      - CF_API_EMAIL=talvor@me.com
      - CF_API_KEY=${CF_API_KEY}
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`proxy.talvor.io`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.services.dashboard.loadbalancer.server.port=8080

    ports:
      - target: 8080
        published: 8080
        mode: host
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 4022
        published: 4022
        mode: host
    networks:
      - traefik-public
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/share/traefik:/etc/traefik"

networks:
  traefik-public:
    external: true
